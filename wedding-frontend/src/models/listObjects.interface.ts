// Generated by https://quicktype.io
import type { GeoCoordinates, DateArray, EventStatus } from "ics";

export interface IListObject {
  uuid?: string;
  slug?: string;
  content: null | string;
  subject: string;
  questions?: IQuestion[];
  created_at?: string;
  widget?: IWidget[];
  type?: string;
  picture?: null | string;
  thumbnail?: null | string;
}

export interface IInformation extends IListObject {
  type: string;
  widget: IWidget[];
  picture: null | string;
  thumbnail: null | string;
}

export interface IMessage extends IListObject {
  questions: IQuestion[];
}

export interface IQuestion {
  uuid: string;
  content: null | string;
  subject: string;
  options: IOptionElement[];
  response: IResponse | null;
  multi_select: boolean;
  free_text: boolean;
  mandatory: boolean;
}

export interface IOptionElement {
  uuid: string;
  content: string;
}

export interface IResponse {
  option: string[];
  text: string;
  uuid?: string;
  question?: string;
}
// Generated by https://quicktype.io

export interface ISubscription {
  endpoint: string;
  keys: IKeys;
}

export interface IKeys {
  id?: number;
  p256dh: string;
  auth: string;
}

export interface IWidget {
  type: IWidgetType;
  content: IContent;
}

export interface IContent {
  start?: DateArray;
  duration?: IDuration;
  location?: string;
  src?: string;
  address1?: string;
  address2?: string;
  city?: string;
  postalCode?: string;
  country?: string;
  description?: string;
  geo?: GeoCoordinates;
  status?: EventStatus;
}

export interface IDuration {
  hours: number;
  minutes?: number;
}

export enum IWidgetType {
  calendar = "calendar",
  maps = "maps",
}

// Generated by https://quicktype.io

interface IResponseError {
  option: string[];
  text: string[];
  non_field_errors: string[];
}

export type IResponseErrors = {
  q: string;
  e: IResponseError;
};
