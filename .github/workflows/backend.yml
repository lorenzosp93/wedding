name: backend

on:
  push:
    branches: [master]
    paths:
      - "wedding-backend/**"
      - ".github/workflows/backend.yml"
  pull_request:
    branches: [master]
    paths:
      - "wedding-backend/**"
      - ".github/workflows/backend.yml"

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./wedding-backend
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9]
        database-name:
          - django-ci
        database-password:
          - postgres
        database-user:
          - postgres
        database-host:
          - 127.0.0.1
        database-port:
          - 5432
    services:
      postgres:
        image: "postgres:latest"
        env:
          POSTGRES_DB: ${{ matrix.database-name }}
          POSTGRES_USER: ${{ matrix.database-user}}
          POSTGRES_PASSWORD: ${{ matrix.database-password}}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Setup test database
        env:
          POSTGRES_DB_NAME: ${{ matrix.database-name }}
          POSTGRES_USER: ${{ matrix.database-user }}
          POSTGRES_PASSWORD: ${{ matrix.database-password }}
          POSTGRES_DB_HOST: ${{ matrix.database-host }}
          POSTGRES_DB_PORT: ${{ matrix.database-port }}
          POSTGRES_DB: ${{ matrix.database-name }}
        run: |
          export DATABASE_URL=postgres://${{ matrix.database-user }}:${{ matrix.database-password }}@${{ matrix.database-host }}:${{ matrix.database-port }}/${{ matrix.database-name }}
          export SECRET_KEY=test-secret-key
          export DEBUG=1
      - name: Run migrations
        run: |
          export DATABASE_URL=postgres://${{ matrix.database-user }}:${{ matrix.database-password }}@${{ matrix.database-host }}:${{ matrix.database-port }}/${{ matrix.database-name }}
          export SECRET_KEY=test-secret-key
          export DEBUG=1
          export ALLOWED_HOSTS=localhost
          export GITHUB_WORKFLOW=True
          export MODE=workflow
          python manage.py makemigrations
          python manage.py migrate
          python manage.py migrate --run-syncdb
          python manage.py check
      - name: Run Tests
        run: |
          python manage.py test
        env:
          DATABASE_URL: postgres://${{ matrix.database-user }}:${{ matrix.database-password }}@${{ matrix.database-host }}:${{ matrix.database-port }}/${{ matrix.database-name }}
          SECRET_KEY: test-secret-key
          DEBUG: 1
          ALLOWED_HOSTS: localhost
          GITHUB_WORKFLOW: True
          MODE: workflow

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker images
        uses: docker/build-push-action@v2.9.0
        with:
          context: ./wedding-backend
          platforms: linux/amd64,linux/arm64/v8
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/wedding-frontend:${{ env.GITHUB_REF_NAME }}

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Kubernetes
        uses: Azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}
      - name: Rollout deploy
        if: ${{ env.GITHUB_REF_NAME }} == 'master'
        run: kubectl rollout restart deploy wedding -n wedding
      - name: Rollout deploy stage
        if: ${{ env.GITHUB_REF_NAME }}== 'develop'
        run: kubectl rollout restart deploy wedding -n wedding-stg
