name: backend

on:
  push:
    branches: [master, develop]
    paths:
      - "wedding-backend/**"
      - ".github/workflows/backend.yml"

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./wedding-backend
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.11]
        database-name:
          - django-ci
        database-password:
          - postgres
        database-user:
          - postgres
        database-host:
          - 127.0.0.1
        database-port:
          - 5432
    services:
      postgres:
        image: "postgres:latest"
        env:
          POSTGRES_DB: ${{ matrix.database-name }}
          POSTGRES_USER: ${{ matrix.database-user}}
          POSTGRES_PASSWORD: ${{ matrix.database-password}}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: "redis:latest"
        ports:
          - 6379:6379
    env:
      DATABASE_NAME: ${{ matrix.database-name }}
      DATABASE_USERNAME: ${{ matrix.database-user }}
      DATABASE_PASSWORD: ${{ matrix.database-password }}
      DATABASE_HOST: ${{ matrix.database-host }}
      DATABASE_PORT: ${{ matrix.database-port }}
      DB_ENGINE: django.db.backends.postgresql
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run migrations
        run: |
          python manage.py makemigrations
          python manage.py migrate
          python manage.py migrate --run-syncdb
          python manage.py check
      - name: Run Tests
        run: |
          python manage.py test

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker images
        uses: docker/build-push-action@v3
        with:
          file: ./wedding-backend/docker/Dockerfile
          context: ./wedding-backend
          platforms: linux/arm64/v8
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/wedding:${{ github.ref_name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max



  deploy:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Kubernetes
        uses: Azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}
      - name: Rollout deploy
        if: ${{ github.ref_name == 'master' }}
        run: kubectl rollout restart deploy wedding -n wedding && kubectl rollout restart deploy wedding-worker -n wedding
      - name: Rollout deploy stage
        if: ${{ github.ref_name == 'develop' }}
        run: kubectl rollout restart deploy wedding -n wedding-stg && kubectl rollout restart deploy wedding-worker -n wedding-stg
